{"version":3,"sources":["Components/Weather.js","App.js","index.js"],"names":["Weather","useState","city","setCity","country","setCountry","icon","setIcon","temp","setTemp","min","setMin","max","setMax","decription","setDecription","showMyComponent","setShowMyComponent","getWeatherData","a","axios","method","url","then","res","console","log","data","weather","main","temp_min","temp_max","description","sys","catch","err","className","type","placeholder","value","onChange","e","target","onClick","src","alt","Math","floor","Date","toLocaleDateString","App","ReactDOM","render","document","getElementById"],"mappings":"mQAmEeA,EAhEC,WACd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAsBR,mBAAS,IAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAsBV,mBAAS,IAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACA,EAAoCZ,mBAAS,IAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAA8Cd,oBAAS,GAAvD,mBAAOe,EAAP,KAAwBC,EAAxB,KAEMC,EAAc,uCAAG,WAAOhB,EAAME,GAAb,SAAAe,EAAA,sEACfC,IAAM,CACVC,OAAQ,MACRC,IAAI,qDAAD,OAAuDpB,EAAvD,YAA+DE,EAA/D,6CACFmB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChBpB,EAAQiB,EAAIG,KAAKC,QAAQ,GAAGtB,MAC5BG,EAAQe,EAAIG,KAAKE,KAAKrB,KAAK,QAC3BG,EAAOa,EAAIG,KAAKE,KAAKC,SAAS,QAC9BjB,EAAOW,EAAIG,KAAKE,KAAKE,SAAS,QAC9BhB,EAAcS,EAAIG,KAAKC,QAAQ,GAAGI,aAClCf,GAAmB,GACnBZ,EAAWmB,EAAIG,KAAKM,IAAI7B,YACzB8B,OAAM,SAACC,GACNV,QAAQC,IAAIS,MAdK,2CAAH,wDAiBpB,OACE,sBAAKC,UAAU,UAAf,UACG,uBACAA,UAAU,aACVC,KAAK,OACLC,YAAY,YACZC,MAAOrC,EACPsC,SAAU,SAACC,GAAD,OAAKtC,EAAQsC,EAAEC,OAAOH,UAGhC,uBACAH,UAAU,gBACVC,KAAK,OACLC,YAAY,eACZC,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAKpC,EAAWoC,EAAEC,OAAOH,UAGnC,wBAAQI,QAAS,kBAAIzB,EAAehB,EAAKE,IAAzC,yBAECY,EACD,sBAAKoB,UAAU,OAAf,UACA,+BAAKlC,EAAL,IAAYE,KACZ,qBAAKwC,IAAG,2CAAsCtC,EAAtC,WAAqDuC,IAAI,iBAC/DrC,EAAO,+BAAKsC,KAAKC,MAAMvC,GAAhB,YAA8B,KACvC,sBAAK4B,UAAU,UAAf,UACE,qBAAIA,UAAU,MAAd,iBAAyBU,KAAKC,MAAMrC,GAApC,YACA,qBAAI0B,UAAU,MAAd,iBAAyBU,KAAKC,MAAMnC,GAApC,eAEF,6BAAKE,IACL,2CAAa,IAAIkC,MAAOC,2BAClB,SChDEC,G,MARH,WACV,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,QCHNe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a398e630.chunk.js","sourcesContent":["import React,{useState}from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Weather = () =>{\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"\");\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [min, setMin] = useState(\"\");\r\n  const [max, setMax] = useState(\"\");\r\n  const [decription, setDecription] = useState(\"\");\r\n  const [showMyComponent, setShowMyComponent] = useState(false);\r\n  \r\n  const getWeatherData = async (city, country) => {\r\n    await axios({\r\n      method: \"GET\",\r\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=e5b5db7a2ef058017216d8fc8fd64a77`\r\n    }).then((res) =>{\r\n        console.log(res.data);\r\n        setIcon(res.data.weather[0].icon);\r\n        setTemp(res.data.main.temp-273.15);\r\n        setMin(res.data.main.temp_min-273.15);\r\n        setMax(res.data.main.temp_max-273.15);\r\n        setDecription(res.data.weather[0].description);\r\n        setShowMyComponent(true)\r\n        setCountry(res.data.sys.country)\r\n    }).catch((err) =>{\r\n        console.log(err);\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n       <input \r\n       className=\"city-input\"\r\n       type='text'\r\n       placeholder=\"city name\"\r\n       value={city}\r\n       onChange={(e)=>setCity(e.target.value)}\r\n       />\r\n\r\n       <input\r\n       className=\"country-input\"\r\n       type='text'\r\n       placeholder='country name'\r\n       value={country}\r\n       onChange={(e)=>setCountry(e.target.value)}\r\n       />\r\n\r\n       <button onClick={()=>getWeatherData(city,country)}>Get Weather</button>\r\n       \r\n       {showMyComponent ? \r\n       <div className='data'>\r\n       <h1>{city},{country}</h1>\r\n       <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt='weather-icon'/>\r\n       { temp ? <h1>{Math.floor(temp)}℃</h1>: null}\r\n       <div className=\"max-min\">\r\n         <h4 className=\"min\">Min:{Math.floor(min)}℃</h4>\r\n         <h4 className=\"max\">Max:{Math.floor(max)}℃</h4>\r\n       </div>\r\n       <h3>{decription}</h3>\r\n       <span>Date: {new Date().toLocaleDateString()}</span>\r\n     </div> :null}\r\n       \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Weather from \"./Components/Weather\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"; \n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}