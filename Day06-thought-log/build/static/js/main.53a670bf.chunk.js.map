{"version":3,"sources":["Thought.js","App.js","index.js"],"names":["Thought","props","thought","className","onClick","click","App","state","thoughts","deleteThoughtHandler","thoughtIndex","splice","setState","addThoughtHandler","event","preventDefault","newthought","content","newThought","value","push","this","map","index","reverse","onSubmit","type","placeholder","ref","input","style","backgroundColor","Component","ReactDOM","render","document","getElementById"],"mappings":"kNAeeA,EAbC,SAACC,GACf,OACE,gCACE,6BACGA,EAAMC,UAET,wBAAQC,UAAU,MAAMC,QAASH,EAAMI,MAAvC,gCCoESC,G,kNAxEbC,MAAQ,CACNC,SAAU,I,EAIZC,qBAAuB,SAACC,GAEtB,IAAMF,EAAQ,YAAO,EAAKD,MAAMC,UAChCA,EAASG,OAAOD,EAAc,GAC9B,EAAKE,SAAS,CAAEJ,SAAUA,K,EAI5BK,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,IAAMP,EAAQ,YAAO,EAAKD,MAAMC,UAC1BQ,EAAa,GAGnBA,EAAWC,QAAU,EAAKC,WAAWC,MAErCX,EAASY,KAAKJ,GACd,EAAKJ,SAAS,CAAEJ,SAAUA,IAE1B,EAAKU,WAAWC,MAAQ,M,4CAG1B,WAAU,IAAD,OACHX,EACF,8BACGa,KAAKd,MAAMC,SACTc,KAAI,SAACpB,EAASqB,GACb,OACE,cAAC,EAAD,CACErB,QAASA,EAAQe,QACjBZ,MAAO,kBAAM,EAAKI,qBAAqBc,SAK5CC,YAKP,OACE,qBAAKrB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,kDACA,uDAEA,uBAAMsB,SAAU,SAACX,GAAD,OAAW,EAAKD,kBAAkBC,IAAlD,UACE,uBACEY,KAAK,OACLvB,UAAU,YACVwB,YAAY,eACZC,IAAK,SAACC,GACJ,EAAKX,WAAaW,KAItB,uBAAO1B,UAAU,UAAUuB,KAAK,SAASP,MAAM,OAAOW,MAAO,CAACC,gBAAgB,aAC9E,6BAAKvB,gB,GA/DCwB,cCClBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53a670bf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Thought = (props) => {\r\n  return (\r\n    <div>\r\n      <li>\r\n        {props.thought} \r\n      </li>\r\n      <button className=\"btn\" onClick={props.click}>\r\n        Delete Thought\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thought;\r\n","import React, { Component } from \"react\";\nimport Thought from \"./Thought\";\nimport './App.css';\nclass App extends Component {\n  state = {\n    thoughts: [],\n  };\n\n  //DELETE THOUGHT\n  deleteThoughtHandler = (thoughtIndex) => {\n    //below we are copying the person state array, so we do not mutate the original data (this is best practise)\n    const thoughts = [...this.state.thoughts];\n    thoughts.splice(thoughtIndex, 1);\n    this.setState({ thoughts: thoughts });\n  };\n\n  //ADD THOUGHT\n  addThoughtHandler = (event) => {\n    event.preventDefault();\n    const thoughts = [...this.state.thoughts];\n    const newthought = {};\n\n    //for newthought, we assign it= to our ref'd input value\n    newthought.content = this.newThought.value;\n\n    thoughts.push(newthought);\n    this.setState({ thoughts: thoughts });\n\n    this.newThought.value = null;\n  };\n\n  render() {\n    let thoughts = (\n      <div>\n        {this.state.thoughts\n          .map((thought, index) => {\n            return (\n              <Thought\n                thought={thought.content}\n                click={() => this.deleteThoughtHandler(index)}\n              />\n            );\n          })\n          //reversing the array so the latest post shows first\n          .reverse()}\n      </div>\n    );\n\n    //THE RETURN BLOCK\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>45 days of React</h1>\n          <h2>Day Six / Thought Log</h2>\n\n          <form onSubmit={(event) => this.addThoughtHandler(event)}>\n            <input\n              type=\"text\"\n              className=\"textfield\"\n              placeholder=\"Type Thought\"\n              ref={(input) => {\n                this.newThought = input;\n              }}\n            />\n\n            <input className=\"mainbtn\" type=\"submit\" value=\"Post\" style={{backgroundColor:'#96e37d'}}/>\n            <ul>{thoughts}</ul>\n          </form>\n        </header>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}